{"version":3,"sources":["webpack:///webpack/bootstrap 1a6183e51e15d1d2fd47","webpack:///./src/js/Utils.js","webpack:///./src/main.js","webpack:///./src/js/FaceMess.js","webpack:///./src/js/WebCam.js","webpack:///./src/js/Histogram.js","webpack:///./src/js/ImageProcessor.js","webpack:///./src/main.scss"],"names":["unitStep","get1DPosition","getCoordinate","POINT_8","RADIUS_1","CAMERA_WIDTH","CAMERA_HEIGHT","CANVAS_WIDTH","CANVAS_HEIGHT","FACE_WIDTH","FACE_HEIGHT","FACE_FRAME","NEIGHBOUR_SHIFT","RGBA_SHIFT","UNIFORM_BINARY_PATTERN","n","colLength","x","y","position","Math","floor","CHI_RECOGNITION_THRESHOLD","TRAINED_DATA","bin","frequency","normalized","canvas","createWithImage","faceMess","createById","webCamIcon","document","querySelector","getElementById","addEventListener","webcam","isActive","stopWebCam","setAttribute","startWebCam","capture","utils","FaceMess","width","height","context","getContext","nameCanvas","nameContext","capturedCanvas","capturedContext","start","stop","clearRect","drawImage","extractFeature","generateHistogramValue","console","log","compareHistogram","uniformBinary","getImageData","src","image","Image","onload","scale","file","type","match","browseImage","window","URL","createObjectURL","id","canvasObject","WebCam","stream","cameraTimeout","scaleH","scaleV","video","createElement","positionX","positionY","navigator","getUserMedia","audio","draw","error","save","restore","maxMatch","compareFeature","value","drawOutput","name","setTimeout","clearTimeout","getTracks","Histogram","bins","histogram","i","binLength","length","push","imageData","data","init","dataLength","isNotUniform","j","uniformLength","incrementHistogramFrequency","index","firstHistogram","secondHistogram","chiSquare","total","sum","pow","totalFrequencies","totalNormalizedValue","k","round","observedHistogram","maxMATCH","key","hasOwnProperty","difference","ImageProcessor","rgb2gray","pixel","backupData","slice","neighbourValue","centerPosition","centerValue","getGrayScaleValue","totalNeighbour","putImageData","font","textAlign","fillText"],"mappings":"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","file":"app.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1a6183e51e15d1d2fd47","export const POINT_8 = 8;\nexport const RADIUS_1 = 1;\nexport const CAMERA_WIDTH = 640;\nexport const CAMERA_HEIGHT = 180;\nexport const CANVAS_WIDTH = 180;\nexport const CANVAS_HEIGHT = 180;\nexport const FACE_WIDTH = 180;\nexport const FACE_HEIGHT = 180;\nexport const FACE_FRAME = [(CANVAS_WIDTH - FACE_WIDTH) / 2, (CANVAS_HEIGHT - FACE_HEIGHT) / 2, FACE_WIDTH, FACE_HEIGHT];\nexport const NEIGHBOUR_SHIFT = 3;\nexport const RGBA_SHIFT = 4;\nexport const UNIFORM_BINARY_PATTERN = ['non', 0, 1, 2, 3, 4, 6, 7, 8, 12, 14, 15, 16, 24, 28, 30, 31, 32, 48, 56, 60, 62, 63, 64, 96, 112, 120, 124, 126, 127, 128, 129, 131, 135, 143, 159, 191, 192, 193, 195, 199, 207, 223, 224, 225, 227, 231, 239, 240, 241, 243, 247, 248, 249, 251, 252, 253, 254, 255];\n\nexport function unitStep(n) {\n  if (n < 0) {\n    return 0;\n  } else if (n >= 0) {\n    return 1;\n  }\n}\n\nexport function get1DPosition(colLength, x, y) {\n  return x + y * colLength;\n}\n\nexport function getCoordinate(colLength, position) {\n  return {\n    x: position % colLength,\n    y: Math.floor(position / colLength)\n  };\n}\n\nexport const CHI_RECOGNITION_THRESHOLD = 0.02;\nexport const TRAINED_DATA = {\n  \"Sagar Chamling\": [\n    {bin: \"non\", frequency: 3740, normalized: 0.1154320987654321},\n    {bin: 0, frequency: 386, normalized: 0.01191358024691358},\n    {bin: 1, frequency: 178, normalized: 0.005493827160493827},\n    {bin: 2, frequency: 58, normalized: 0.0017901234567901235},\n    {bin: 3, frequency: 223, normalized: 0.006882716049382716},\n    {bin: 4, frequency: 133, normalized: 0.004104938271604938},\n    {bin: 6, frequency: 185, normalized: 0.005709876543209876},\n    {bin: 7, frequency: 693, normalized: 0.021388888888888888},\n    {bin: 8, frequency: 65, normalized: 0.002006172839506173},\n    {bin: 12, frequency: 256, normalized: 0.007901234567901235},\n    {bin: 14, frequency: 533, normalized: 0.016450617283950617},\n    {bin: 15, frequency: 1006, normalized: 0.031049382716049383},\n    {bin: 16, frequency: 230, normalized: 0.0070987654320987656},\n    {bin: 24, frequency: 314, normalized: 0.009691358024691357},\n    {bin: 28, frequency: 766, normalized: 0.023641975308641976},\n    {bin: 30, frequency: 1061, normalized: 0.032746913580246916},\n    {bin: 31, frequency: 1028, normalized: 0.03172839506172839},\n    {bin: 32, frequency: 67, normalized: 0.002067901234567901},\n    {bin: 48, frequency: 312, normalized: 0.00962962962962963},\n    {bin: 56, frequency: 544, normalized: 0.016790123456790124},\n    {bin: 60, frequency: 919, normalized: 0.028364197530864197},\n    {bin: 62, frequency: 711, normalized: 0.021944444444444444},\n    {bin: 63, frequency: 417, normalized: 0.01287037037037037},\n    {bin: 64, frequency: 117, normalized: 0.003611111111111111},\n    {bin: 96, frequency: 215, normalized: 0.006635802469135803},\n    {bin: 112, frequency: 975, normalized: 0.03009259259259259},\n    {bin: 120, frequency: 1114, normalized: 0.034382716049382714},\n    {bin: 124, frequency: 931, normalized: 0.02873456790123457},\n    {bin: 126, frequency: 488, normalized: 0.015061728395061728},\n    {bin: 127, frequency: 290, normalized: 0.008950617283950617},\n    {bin: 128, frequency: 47, normalized: 0.0014506172839506173},\n    {bin: 129, frequency: 222, normalized: 0.006851851851851852},\n    {bin: 131, frequency: 386, normalized: 0.01191358024691358},\n    {bin: 135, frequency: 831, normalized: 0.02564814814814815},\n    {bin: 143, frequency: 669, normalized: 0.020648148148148148},\n    {bin: 159, frequency: 369, normalized: 0.01138888888888889},\n    {bin: 191, frequency: 133, normalized: 0.004104938271604938},\n    {bin: 192, frequency: 177, normalized: 0.005462962962962963},\n    {bin: 193, frequency: 635, normalized: 0.019598765432098767},\n    {bin: 195, frequency: 913, normalized: 0.028179012345679013},\n    {bin: 199, frequency: 713, normalized: 0.022006172839506174},\n    {bin: 207, frequency: 391, normalized: 0.0120679012345679},\n    {bin: 223, frequency: 244, normalized: 0.007530864197530864},\n    {bin: 224, frequency: 445, normalized: 0.013734567901234567},\n    {bin: 225, frequency: 934, normalized: 0.02882716049382716},\n    {bin: 227, frequency: 552, normalized: 0.017037037037037038},\n    {bin: 231, frequency: 365, normalized: 0.011265432098765432},\n    {bin: 239, frequency: 197, normalized: 0.006080246913580247},\n    {bin: 240, frequency: 1206, normalized: 0.03722222222222222},\n    {bin: 241, frequency: 822, normalized: 0.02537037037037037},\n    {bin: 243, frequency: 304, normalized: 0.009382716049382716},\n    {bin: 247, frequency: 222, normalized: 0.006851851851851852},\n    {bin: 248, frequency: 761, normalized: 0.023487654320987653},\n    {bin: 249, frequency: 395, normalized: 0.012191358024691358},\n    {bin: 251, frequency: 115, normalized: 0.0035493827160493828},\n    {bin: 252, frequency: 540, normalized: 0.016666666666666666},\n    {bin: 253, frequency: 291, normalized: 0.008981481481481481},\n    {bin: 254, frequency: 257, normalized: 0.007932098765432098},\n    {bin: 255, frequency: 1309, normalized: 0.040401234567901234}\n  ],\n  \"Ayush Ghimire\": [\n    {bin: \"non\", frequency: 3008, normalized: 0.09283950617283951},\n    {bin: 0, frequency: 276, normalized: 0.008518518518518519},\n    {bin: 1, frequency: 129, normalized: 0.003981481481481482},\n    {bin: 2, frequency: 44, normalized: 0.0013580246913580246},\n    {bin: 3, frequency: 171, normalized: 0.005277777777777778},\n    {bin: 4, frequency: 85, normalized: 0.002623456790123457},\n    {bin: 6, frequency: 183, normalized: 0.005648148148148148},\n    {bin: 7, frequency: 719, normalized: 0.022191358024691358},\n    {bin: 8, frequency: 64, normalized: 0.0019753086419753087},\n    {bin: 12, frequency: 204, normalized: 0.006296296296296296},\n    {bin: 14, frequency: 512, normalized: 0.01580246913580247},\n    {bin: 15, frequency: 1108, normalized: 0.03419753086419753},\n    {bin: 16, frequency: 164, normalized: 0.005061728395061729},\n    {bin: 24, frequency: 215, normalized: 0.006635802469135803},\n    {bin: 28, frequency: 725, normalized: 0.022376543209876542},\n    {bin: 30, frequency: 998, normalized: 0.03080246913580247},\n    {bin: 31, frequency: 906, normalized: 0.027962962962962964},\n    {bin: 32, frequency: 71, normalized: 0.002191358024691358},\n    {bin: 48, frequency: 247, normalized: 0.007623456790123457},\n    {bin: 56, frequency: 492, normalized: 0.015185185185185185},\n    {bin: 60, frequency: 1032, normalized: 0.03185185185185185},\n    {bin: 62, frequency: 629, normalized: 0.01941358024691358},\n    {bin: 63, frequency: 375, normalized: 0.011574074074074073},\n    {bin: 64, frequency: 113, normalized: 0.003487654320987654},\n    {bin: 96, frequency: 234, normalized: 0.007222222222222222},\n    {bin: 112, frequency: 964, normalized: 0.029753086419753088},\n    {bin: 120, frequency: 1052, normalized: 0.032469135802469136},\n    {bin: 124, frequency: 825, normalized: 0.02546296296296296},\n    {bin: 126, frequency: 374, normalized: 0.01154320987654321},\n    {bin: 127, frequency: 211, normalized: 0.006512345679012346},\n    {bin: 128, frequency: 64, normalized: 0.0019753086419753087},\n    {bin: 129, frequency: 242, normalized: 0.007469135802469135},\n    {bin: 131, frequency: 469, normalized: 0.014475308641975309},\n    {bin: 135, frequency: 1078, normalized: 0.0332716049382716},\n    {bin: 143, frequency: 637, normalized: 0.019660493827160494},\n    {bin: 159, frequency: 352, normalized: 0.010864197530864197},\n    {bin: 191, frequency: 126, normalized: 0.0038888888888888888},\n    {bin: 192, frequency: 217, normalized: 0.0066975308641975305},\n    {bin: 193, frequency: 921, normalized: 0.028425925925925927},\n    {bin: 195, frequency: 1045, normalized: 0.03225308641975309},\n    {bin: 199, frequency: 832, normalized: 0.02567901234567901},\n    {bin: 207, frequency: 375, normalized: 0.011574074074074073},\n    {bin: 223, frequency: 168, normalized: 0.005185185185185185},\n    {bin: 224, frequency: 639, normalized: 0.01972222222222222},\n    {bin: 225, frequency: 1499, normalized: 0.046265432098765435},\n    {bin: 227, frequency: 815, normalized: 0.02515432098765432},\n    {bin: 231, frequency: 366, normalized: 0.011296296296296296},\n    {bin: 239, frequency: 153, normalized: 0.004722222222222222},\n    {bin: 240, frequency: 1455, normalized: 0.04490740740740741},\n    {bin: 241, frequency: 1054, normalized: 0.032530864197530866},\n    {bin: 243, frequency: 365, normalized: 0.011265432098765432},\n    {bin: 247, frequency: 250, normalized: 0.007716049382716049},\n    {bin: 248, frequency: 811, normalized: 0.025030864197530863},\n    {bin: 249, frequency: 396, normalized: 0.012222222222222223},\n    {bin: 251, frequency: 113, normalized: 0.003487654320987654},\n    {bin: 252, frequency: 395, normalized: 0.012191358024691358},\n    {bin: 253, frequency: 240, normalized: 0.007407407407407408},\n    {bin: 254, frequency: 177, normalized: 0.005462962962962963},\n    {bin: 255, frequency: 1016, normalized: 0.031358024691358025}\n  ],\n  \"Safal Pandey\": [\n    {bin: \"non\", frequency: 2840, normalized: 0.08765432098765433},\n    {bin: 0, frequency: 222, normalized: 0.006851851851851852},\n    {bin: 1, frequency: 132, normalized: 0.004074074074074074},\n    {bin: 2, frequency: 39, normalized: 0.0012037037037037038},\n    {bin: 3, frequency: 233, normalized: 0.0071913580246913585},\n    {bin: 4, frequency: 78, normalized: 0.0024074074074074076},\n    {bin: 6, frequency: 167, normalized: 0.005154320987654321},\n    {bin: 7, frequency: 758, normalized: 0.02339506172839506},\n    {bin: 8, frequency: 38, normalized: 0.0011728395061728395},\n    {bin: 12, frequency: 160, normalized: 0.0049382716049382715},\n    {bin: 14, frequency: 433, normalized: 0.013364197530864198},\n    {bin: 15, frequency: 1081, normalized: 0.0333641975308642},\n    {bin: 16, frequency: 124, normalized: 0.0038271604938271606},\n    {bin: 24, frequency: 175, normalized: 0.005401234567901234},\n    {bin: 28, frequency: 650, normalized: 0.020061728395061727},\n    {bin: 30, frequency: 973, normalized: 0.030030864197530864},\n    {bin: 31, frequency: 963, normalized: 0.029722222222222223},\n    {bin: 32, frequency: 49, normalized: 0.0015123456790123457},\n    {bin: 48, frequency: 207, normalized: 0.006388888888888889},\n    {bin: 56, frequency: 483, normalized: 0.014907407407407407},\n    {bin: 60, frequency: 1080, normalized: 0.03333333333333333},\n    {bin: 62, frequency: 581, normalized: 0.0179320987654321},\n    {bin: 63, frequency: 314, normalized: 0.009691358024691357},\n    {bin: 64, frequency: 85, normalized: 0.002623456790123457},\n    {bin: 96, frequency: 150, normalized: 0.004629629629629629},\n    {bin: 112, frequency: 676, normalized: 0.020864197530864197},\n    {bin: 120, frequency: 1176, normalized: 0.0362962962962963},\n    {bin: 124, frequency: 882, normalized: 0.02722222222222222},\n    {bin: 126, frequency: 331, normalized: 0.01021604938271605},\n    {bin: 127, frequency: 215, normalized: 0.006635802469135803},\n    {bin: 128, frequency: 47, normalized: 0.0014506172839506173},\n    {bin: 129, frequency: 198, normalized: 0.006111111111111111},\n    {bin: 131, frequency: 655, normalized: 0.02021604938271605},\n    {bin: 135, frequency: 1573, normalized: 0.04854938271604938},\n    {bin: 143, frequency: 667, normalized: 0.02058641975308642},\n    {bin: 159, frequency: 368, normalized: 0.011358024691358024},\n    {bin: 191, frequency: 97, normalized: 0.002993827160493827},\n    {bin: 192, frequency: 148, normalized: 0.004567901234567902},\n    {bin: 193, frequency: 976, normalized: 0.030123456790123456},\n    {bin: 195, frequency: 1451, normalized: 0.04478395061728395},\n    {bin: 199, frequency: 1281, normalized: 0.03953703703703704},\n    {bin: 207, frequency: 391, normalized: 0.0120679012345679},\n    {bin: 223, frequency: 269, normalized: 0.00830246913580247},\n    {bin: 224, frequency: 541, normalized: 0.01669753086419753},\n    {bin: 225, frequency: 1422, normalized: 0.04388888888888889},\n    {bin: 227, frequency: 780, normalized: 0.024074074074074074},\n    {bin: 231, frequency: 380, normalized: 0.011728395061728396},\n    {bin: 239, frequency: 156, normalized: 0.004814814814814815},\n    {bin: 240, frequency: 1262, normalized: 0.03895061728395062},\n    {bin: 241, frequency: 1069, normalized: 0.03299382716049383},\n    {bin: 243, frequency: 365, normalized: 0.011265432098765432},\n    {bin: 247, frequency: 211, normalized: 0.006512345679012346},\n    {bin: 248, frequency: 589, normalized: 0.01817901234567901},\n    {bin: 249, frequency: 289, normalized: 0.008919753086419752},\n    {bin: 251, frequency: 101, normalized: 0.003117283950617284},\n    {bin: 252, frequency: 321, normalized: 0.009907407407407408},\n    {bin: 253, frequency: 211, normalized: 0.006512345679012346},\n    {bin: 254, frequency: 144, normalized: 0.0044444444444444444},\n    {bin: 255, frequency: 1143, normalized: 0.035277777777777776}\n  ],\n  \"Ishan Dhakal\": [\n    {bin: \"non\", frequency: 3516, normalized: 0.10851851851851851},\n    {bin: 0, frequency: 305, normalized: 0.009413580246913581},\n    {bin: 1, frequency: 142, normalized: 0.004382716049382716},\n    {bin: 2, frequency: 58, normalized: 0.0017901234567901235},\n    {bin: 3, frequency: 171, normalized: 0.005277777777777778},\n    {bin: 4, frequency: 109, normalized: 0.0033641975308641974},\n    {bin: 6, frequency: 185, normalized: 0.005709876543209876},\n    {bin: 7, frequency: 745, normalized: 0.022993827160493828},\n    {bin: 8, frequency: 68, normalized: 0.0020987654320987655},\n    {bin: 12, frequency: 179, normalized: 0.0055246913580246915},\n    {bin: 14, frequency: 477, normalized: 0.014722222222222222},\n    {bin: 15, frequency: 1219, normalized: 0.03762345679012346},\n    {bin: 16, frequency: 197, normalized: 0.006080246913580247},\n    {bin: 24, frequency: 232, normalized: 0.007160493827160494},\n    {bin: 28, frequency: 702, normalized: 0.021666666666666667},\n    {bin: 30, frequency: 829, normalized: 0.02558641975308642},\n    {bin: 31, frequency: 964, normalized: 0.029753086419753088},\n    {bin: 32, frequency: 72, normalized: 0.0022222222222222222},\n    {bin: 48, frequency: 269, normalized: 0.00830246913580247},\n    {bin: 56, frequency: 568, normalized: 0.017530864197530863},\n    {bin: 60, frequency: 1063, normalized: 0.03280864197530864},\n    {bin: 62, frequency: 582, normalized: 0.017962962962962962},\n    {bin: 63, frequency: 410, normalized: 0.012654320987654321},\n    {bin: 64, frequency: 84, normalized: 0.0025925925925925925},\n    {bin: 96, frequency: 199, normalized: 0.006141975308641976},\n    {bin: 112, frequency: 1061, normalized: 0.032746913580246916},\n    {bin: 120, frequency: 1071, normalized: 0.03305555555555555},\n    {bin: 124, frequency: 961, normalized: 0.029660493827160492},\n    {bin: 126, frequency: 407, normalized: 0.012561728395061728},\n    {bin: 127, frequency: 303, normalized: 0.009351851851851853},\n    {bin: 128, frequency: 50, normalized: 0.0015432098765432098},\n    {bin: 129, frequency: 186, normalized: 0.005740740740740741},\n    {bin: 131, frequency: 334, normalized: 0.010308641975308641},\n    {bin: 135, frequency: 734, normalized: 0.02265432098765432},\n    {bin: 143, frequency: 660, normalized: 0.020370370370370372},\n    {bin: 159, frequency: 414, normalized: 0.012777777777777779},\n    {bin: 191, frequency: 114, normalized: 0.0035185185185185185},\n    {bin: 192, frequency: 186, normalized: 0.005740740740740741},\n    {bin: 193, frequency: 697, normalized: 0.021512345679012345},\n    {bin: 195, frequency: 711, normalized: 0.021944444444444444},\n    {bin: 199, frequency: 645, normalized: 0.01990740740740741},\n    {bin: 207, frequency: 337, normalized: 0.010401234567901235},\n    {bin: 223, frequency: 266, normalized: 0.008209876543209876},\n    {bin: 224, frequency: 547, normalized: 0.016882716049382716},\n    {bin: 225, frequency: 995, normalized: 0.030709876543209877},\n    {bin: 227, frequency: 559, normalized: 0.017253086419753087},\n    {bin: 231, frequency: 328, normalized: 0.010123456790123457},\n    {bin: 239, frequency: 156, normalized: 0.004814814814814815},\n    {bin: 240, frequency: 1507, normalized: 0.04651234567901234},\n    {bin: 241, frequency: 1179, normalized: 0.03638888888888889},\n    {bin: 243, frequency: 369, normalized: 0.01138888888888889},\n    {bin: 247, frequency: 274, normalized: 0.00845679012345679},\n    {bin: 248, frequency: 798, normalized: 0.02462962962962963},\n    {bin: 249, frequency: 477, normalized: 0.014722222222222222},\n    {bin: 251, frequency: 123, normalized: 0.0037962962962962963},\n    {bin: 252, frequency: 526, normalized: 0.016234567901234568},\n    {bin: 253, frequency: 394, normalized: 0.012160493827160494},\n    {bin: 254, frequency: 187, normalized: 0.005771604938271605},\n    {bin: 255, frequency: 1499, normalized: 0.046265432098765435}\n  ],\n  \"Prajwol Prajapati\": [\n    {bin: \"non\", frequency: 2671, normalized: 0.08243827160493827},\n    {bin: 0, frequency: 218, normalized: 0.006728395061728395},\n    {bin: 1, frequency: 122, normalized: 0.003765432098765432},\n    {bin: 2, frequency: 22, normalized: 0.0006790123456790123},\n    {bin: 3, frequency: 146, normalized: 0.004506172839506173},\n    {bin: 4, frequency: 65, normalized: 0.002006172839506173},\n    {bin: 6, frequency: 141, normalized: 0.0043518518518518515},\n    {bin: 7, frequency: 570, normalized: 0.017592592592592594},\n    {bin: 8, frequency: 30, normalized: 0.000925925925925926},\n    {bin: 12, frequency: 158, normalized: 0.004876543209876543},\n    {bin: 14, frequency: 555, normalized: 0.01712962962962963},\n    {bin: 15, frequency: 1096, normalized: 0.03382716049382716},\n    {bin: 16, frequency: 121, normalized: 0.0037345679012345677},\n    {bin: 24, frequency: 203, normalized: 0.006265432098765432},\n    {bin: 28, frequency: 636, normalized: 0.01962962962962963},\n    {bin: 30, frequency: 1337, normalized: 0.04126543209876543},\n    {bin: 31, frequency: 1108, normalized: 0.03419753086419753},\n    {bin: 32, frequency: 52, normalized: 0.0016049382716049382},\n    {bin: 48, frequency: 242, normalized: 0.007469135802469135},\n    {bin: 56, frequency: 628, normalized: 0.019382716049382714},\n    {bin: 60, frequency: 1105, normalized: 0.03410493827160494},\n    {bin: 62, frequency: 591, normalized: 0.01824074074074074},\n    {bin: 63, frequency: 288, normalized: 0.008888888888888889},\n    {bin: 64, frequency: 80, normalized: 0.0024691358024691358},\n    {bin: 96, frequency: 156, normalized: 0.004814814814814815},\n    {bin: 112, frequency: 982, normalized: 0.030308641975308644},\n    {bin: 120, frequency: 1444, normalized: 0.0445679012345679},\n    {bin: 124, frequency: 1181, normalized: 0.03645061728395062},\n    {bin: 126, frequency: 373, normalized: 0.011512345679012345},\n    {bin: 127, frequency: 213, normalized: 0.006574074074074074},\n    {bin: 128, frequency: 44, normalized: 0.0013580246913580246},\n    {bin: 129, frequency: 173, normalized: 0.0053395061728395065},\n    {bin: 131, frequency: 502, normalized: 0.015493827160493827},\n    {bin: 135, frequency: 1094, normalized: 0.03376543209876543},\n    {bin: 143, frequency: 526, normalized: 0.016234567901234568},\n    {bin: 159, frequency: 284, normalized: 0.008765432098765432},\n    {bin: 191, frequency: 98, normalized: 0.0030246913580246914},\n    {bin: 192, frequency: 109, normalized: 0.0033641975308641974},\n    {bin: 193, frequency: 825, normalized: 0.02546296296296296},\n    {bin: 195, frequency: 1186, normalized: 0.036604938271604937},\n    {bin: 199, frequency: 1044, normalized: 0.03222222222222222},\n    {bin: 207, frequency: 287, normalized: 0.008858024691358025},\n    {bin: 223, frequency: 168, normalized: 0.005185185185185185},\n    {bin: 224, frequency: 613, normalized: 0.018919753086419754},\n    {bin: 225, frequency: 1497, normalized: 0.046203703703703705},\n    {bin: 227, frequency: 699, normalized: 0.021574074074074075},\n    {bin: 231, frequency: 394, normalized: 0.012160493827160494},\n    {bin: 239, frequency: 136, normalized: 0.004197530864197531},\n    {bin: 240, frequency: 1476, normalized: 0.04555555555555556},\n    {bin: 241, frequency: 1135, normalized: 0.03503086419753086},\n    {bin: 243, frequency: 308, normalized: 0.009506172839506173},\n    {bin: 247, frequency: 209, normalized: 0.006450617283950617},\n    {bin: 248, frequency: 830, normalized: 0.025617283950617284},\n    {bin: 249, frequency: 362, normalized: 0.01117283950617284},\n    {bin: 251, frequency: 91, normalized: 0.002808641975308642},\n    {bin: 252, frequency: 474, normalized: 0.01462962962962963},\n    {bin: 253, frequency: 244, normalized: 0.007530864197530864},\n    {bin: 254, frequency: 148, normalized: 0.004567901234567902},\n    {bin: 255, frequency: 910, normalized: 0.02808641975308642}\n  ],\n  \"Sushan Raj Shakya\": [\n    {bin: \"non\", frequency: 2932, normalized: 0.09049382716049383},\n    {bin: 0, frequency: 285, normalized: 0.008796296296296297},\n    {bin: 1, frequency: 139, normalized: 0.004290123456790124},\n    {bin: 2, frequency: 51, normalized: 0.001574074074074074},\n    {bin: 3, frequency: 262, normalized: 0.00808641975308642},\n    {bin: 4, frequency: 106, normalized: 0.003271604938271605},\n    {bin: 6, frequency: 170, normalized: 0.005246913580246914},\n    {bin: 7, frequency: 779, normalized: 0.02404320987654321},\n    {bin: 8, frequency: 40, normalized: 0.0012345679012345679},\n    {bin: 12, frequency: 172, normalized: 0.005308641975308642},\n    {bin: 14, frequency: 426, normalized: 0.013148148148148148},\n    {bin: 15, frequency: 940, normalized: 0.029012345679012345},\n    {bin: 16, frequency: 157, normalized: 0.004845679012345679},\n    {bin: 24, frequency: 201, normalized: 0.0062037037037037035},\n    {bin: 28, frequency: 635, normalized: 0.019598765432098767},\n    {bin: 30, frequency: 896, normalized: 0.027654320987654323},\n    {bin: 31, frequency: 844, normalized: 0.026049382716049382},\n    {bin: 32, frequency: 41, normalized: 0.0012654320987654322},\n    {bin: 48, frequency: 194, normalized: 0.005987654320987654},\n    {bin: 56, frequency: 520, normalized: 0.016049382716049384},\n    {bin: 60, frequency: 1393, normalized: 0.042993827160493825},\n    {bin: 62, frequency: 637, normalized: 0.019660493827160494},\n    {bin: 63, frequency: 348, normalized: 0.01074074074074074},\n    {bin: 64, frequency: 108, normalized: 0.0033333333333333335},\n    {bin: 96, frequency: 134, normalized: 0.004135802469135802},\n    {bin: 112, frequency: 590, normalized: 0.018209876543209876},\n    {bin: 120, frequency: 952, normalized: 0.029382716049382716},\n    {bin: 124, frequency: 1020, normalized: 0.03148148148148148},\n    {bin: 126, frequency: 403, normalized: 0.012438271604938272},\n    {bin: 127, frequency: 207, normalized: 0.006388888888888889},\n    {bin: 128, frequency: 43, normalized: 0.0013271604938271606},\n    {bin: 129, frequency: 271, normalized: 0.008364197530864198},\n    {bin: 131, frequency: 789, normalized: 0.02435185185185185},\n    {bin: 135, frequency: 1602, normalized: 0.049444444444444444},\n    {bin: 143, frequency: 749, normalized: 0.023117283950617285},\n    {bin: 159, frequency: 361, normalized: 0.011141975308641975},\n    {bin: 191, frequency: 111, normalized: 0.003425925925925926},\n    {bin: 192, frequency: 160, normalized: 0.0049382716049382715},\n    {bin: 193, frequency: 871, normalized: 0.026882716049382718},\n    {bin: 195, frequency: 1767, normalized: 0.05453703703703704},\n    {bin: 199, frequency: 1529, normalized: 0.047191358024691356},\n    {bin: 207, frequency: 482, normalized: 0.014876543209876544},\n    {bin: 223, frequency: 242, normalized: 0.007469135802469135},\n    {bin: 224, frequency: 418, normalized: 0.012901234567901234},\n    {bin: 225, frequency: 1308, normalized: 0.04037037037037037},\n    {bin: 227, frequency: 771, normalized: 0.023796296296296298},\n    {bin: 231, frequency: 408, normalized: 0.012592592592592593},\n    {bin: 239, frequency: 174, normalized: 0.00537037037037037},\n    {bin: 240, frequency: 917, normalized: 0.02830246913580247},\n    {bin: 241, frequency: 818, normalized: 0.025246913580246912},\n    {bin: 243, frequency: 321, normalized: 0.009907407407407408},\n    {bin: 247, frequency: 235, normalized: 0.007253086419753086},\n    {bin: 248, frequency: 496, normalized: 0.015308641975308642},\n    {bin: 249, frequency: 290, normalized: 0.008950617283950617},\n    {bin: 251, frequency: 114, normalized: 0.0035185185185185185},\n    {bin: 252, frequency: 289, normalized: 0.008919753086419752},\n    {bin: 253, frequency: 180, normalized: 0.005555555555555556},\n    {bin: 254, frequency: 176, normalized: 0.005432098765432099},\n    {bin: 255, frequency: 926, normalized: 0.028580246913580246}\n  ],\n  \"Praval Sharma\": [\n    {bin: \"non\", frequency: 2568, normalized: 0.07925925925925927},\n    {bin: 0, frequency: 239, normalized: 0.007376543209876543},\n    {bin: 1, frequency: 133, normalized: 0.004104938271604938},\n    {bin: 2, frequency: 29, normalized: 0.0008950617283950618},\n    {bin: 3, frequency: 215, normalized: 0.006635802469135803},\n    {bin: 4, frequency: 87, normalized: 0.002685185185185185},\n    {bin: 6, frequency: 176, normalized: 0.005432098765432099},\n    {bin: 7, frequency: 790, normalized: 0.024382716049382715},\n    {bin: 8, frequency: 29, normalized: 0.0008950617283950618},\n    {bin: 12, frequency: 193, normalized: 0.00595679012345679},\n    {bin: 14, frequency: 504, normalized: 0.015555555555555555},\n    {bin: 15, frequency: 1280, normalized: 0.03950617283950617},\n    {bin: 16, frequency: 123, normalized: 0.0037962962962962963},\n    {bin: 24, frequency: 206, normalized: 0.006358024691358025},\n    {bin: 28, frequency: 750, normalized: 0.023148148148148147},\n    {bin: 30, frequency: 1112, normalized: 0.03432098765432099},\n    {bin: 31, frequency: 1029, normalized: 0.03175925925925926},\n    {bin: 32, frequency: 37, normalized: 0.0011419753086419754},\n    {bin: 48, frequency: 178, normalized: 0.005493827160493827},\n    {bin: 56, frequency: 491, normalized: 0.015154320987654322},\n    {bin: 60, frequency: 1497, normalized: 0.046203703703703705},\n    {bin: 62, frequency: 686, normalized: 0.02117283950617284},\n    {bin: 63, frequency: 370, normalized: 0.011419753086419753},\n    {bin: 64, frequency: 75, normalized: 0.0023148148148148147},\n    {bin: 96, frequency: 181, normalized: 0.00558641975308642},\n    {bin: 112, frequency: 667, normalized: 0.02058641975308642},\n    {bin: 120, frequency: 958, normalized: 0.0295679012345679},\n    {bin: 124, frequency: 795, normalized: 0.024537037037037038},\n    {bin: 126, frequency: 381, normalized: 0.01175925925925926},\n    {bin: 127, frequency: 191, normalized: 0.005895061728395061},\n    {bin: 128, frequency: 46, normalized: 0.001419753086419753},\n    {bin: 129, frequency: 222, normalized: 0.006851851851851852},\n    {bin: 131, frequency: 694, normalized: 0.021419753086419753},\n    {bin: 135, frequency: 1486, normalized: 0.045864197530864195},\n    {bin: 143, frequency: 770, normalized: 0.023765432098765433},\n    {bin: 159, frequency: 357, normalized: 0.011018518518518518},\n    {bin: 191, frequency: 95, normalized: 0.002932098765432099},\n    {bin: 192, frequency: 167, normalized: 0.005154320987654321},\n    {bin: 193, frequency: 986, normalized: 0.030432098765432097},\n    {bin: 195, frequency: 1712, normalized: 0.05283950617283951},\n    {bin: 199, frequency: 1212, normalized: 0.03740740740740741},\n    {bin: 207, frequency: 365, normalized: 0.011265432098765432},\n    {bin: 223, frequency: 167, normalized: 0.005154320987654321},\n    {bin: 224, frequency: 503, normalized: 0.015524691358024692},\n    {bin: 225, frequency: 1411, normalized: 0.043549382716049384},\n    {bin: 227, frequency: 848, normalized: 0.02617283950617284},\n    {bin: 231, frequency: 382, normalized: 0.011790123456790123},\n    {bin: 239, frequency: 156, normalized: 0.004814814814814815},\n    {bin: 240, frequency: 1116, normalized: 0.034444444444444444},\n    {bin: 241, frequency: 842, normalized: 0.025987654320987656},\n    {bin: 243, frequency: 330, normalized: 0.010185185185185186},\n    {bin: 247, frequency: 187, normalized: 0.005771604938271605},\n    {bin: 248, frequency: 561, normalized: 0.017314814814814814},\n    {bin: 249, frequency: 278, normalized: 0.008580246913580248},\n    {bin: 251, frequency: 89, normalized: 0.0027469135802469136},\n    {bin: 252, frequency: 282, normalized: 0.008703703703703703},\n    {bin: 253, frequency: 181, normalized: 0.00558641975308642},\n    {bin: 254, frequency: 124, normalized: 0.0038271604938271606},\n    {bin: 255, frequency: 861, normalized: 0.026574074074074073}\n  ]\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Utils.js","import FaceMess from './js/FaceMess';\n\nlet canvas = FaceMess.createWithImage('canvas', 'images/lenna.png');\n\nlet faceMess = FaceMess.createById('canvas');\nlet webCamIcon = document.querySelector('#webCam .fa');\n\ndocument.getElementById('webCam').addEventListener('click', () => {\n  if (faceMess.webcam.isActive) {\n    faceMess.stopWebCam();\n    webCamIcon.setAttribute('class', 'fa fa-play fa-2x');\n  } else {\n    faceMess.startWebCam();\n    webCamIcon.setAttribute('class', 'fa fa-pause fa-2x');\n  }\n});\n\ndocument.getElementById('capture').addEventListener('click', () => {\n  faceMess.capture();\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","import WebCam from \"./WebCam\";\nimport Histogram from \"./Histogram\";\nimport ImageProcessor from \"./ImageProcessor\";\nimport * as utils from \"./Utils\";\n\nclass FaceMess {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.webcam = new WebCam();\n    this.width = this.canvas.width;\n    this.height = this.canvas.height;\n    this.context = this.canvas.getContext('2d');\n    this.nameCanvas = document.getElementById('name');\n    this.nameContext = this.nameCanvas.getContext('2d');\n    this.capturedCanvas = document.getElementById('capturedImage');\n    this.capturedContext = this.capturedCanvas.getContext('2d');\n  }\n\n  static createById(id) {\n    return new FaceMess(document.getElementById(id));\n  }\n\n  static createWithImage(id, src) {\n    let canvasObject = FaceMess.createById(id);\n    canvasObject.browseImage(src);\n\n    return canvasObject;\n  }\n\n  startWebCam() {\n    this.webcam.start(this.canvas, this.capturedCanvas, this.nameCanvas);\n  }\n\n  stopWebCam() {\n    this.webcam.stop();\n  }\n\n  capture() {\n    this.capturedContext.clearRect(0, 0, this.width, this.height);\n    this.capturedContext.drawImage(this.canvas, 0, 0);\n    ImageProcessor.extractFeature(this.capturedCanvas);\n    this.generateHistogramValue();\n  }\n\n  generateHistogramValue() {\n    console.log(Histogram.compareHistogram(Histogram.uniformBinary(ImageProcessor.getImageData(this.capturedCanvas)), utils.TRAINED_DATA['Sagar Chamling']));\n    console.log(Histogram.uniformBinary(ImageProcessor.getImageData(this.capturedCanvas)));\n  }\n\n  browseImage(src) {\n    let image = new Image();\n    image.src = src;\n    image.onload = () => {\n      let scale = this.width / image.width;\n      this.capturedContext.clearRect(0, 0, this.width, this.height);\n      this.capturedContext.drawImage(image, 0, (this.height - image.height * scale) / 2, this.width, image.height * scale);\n      ImageProcessor.extractFeature(this.capturedCanvas);\n      // this.generateHistogramValue();\n    };\n  }\n\n  handleLocalFile(file) {\n    if (file.type.match(/image.*/)) {\n      this.browseImage(window.URL.createObjectURL(file));\n    }\n  }\n}\n\nexport default FaceMess;\n\n\n// WEBPACK FOOTER //\n// ./src/js/FaceMess.js","import * as utils from \"./Utils\";\nimport Histogram from \"./Histogram\";\nimport ImageProcessor from \"./ImageProcessor\";\n\nclass WebCam {\n  constructor() {\n    this.stream = '';\n    this.isActive = false;\n    this.cameraTimeout = '';\n    this.scaleH = -1;\n    this.scaleV = 1;\n    this.video = document.createElement('video');\n  }\n\n  start(canvas, capturedCanvas, nameCanvas) {\n    let context = canvas.getContext(\"2d\");\n    let capturedContext = capturedCanvas.getContext(\"2d\");\n    let positionX = (this.scaleH === 1 ? 0 : utils.CANVAS_WIDTH * -1) + (utils.CANVAS_WIDTH - utils.CAMERA_WIDTH) / 2;\n    let positionY = (this.scaleV === 1 ? 0 : utils.CANVAS_HEIGHT * -1) + (utils.CANVAS_HEIGHT - utils.CAMERA_HEIGHT) / 2;\n    navigator.getUserMedia({\n      video: true,\n      audio: false\n    }, (stream) => {\n      this.video.src = window.URL.createObjectURL(stream);\n      this.stream = stream;\n      draw(this.video, context);\n    }, function (error) {\n      console.log(error);\n    });\n    let draw = (video) => {\n      context.save();\n      context.scale(this.scaleH, this.scaleV);\n      context.drawImage(video, positionX, positionY);\n      context.restore();\n      capturedContext.drawImage(canvas, 0, 0);\n      ImageProcessor.extractFeature(capturedCanvas);\n      let maxMatch = Histogram.compareFeature(capturedCanvas);\n\n      if (maxMatch.value <= utils.CHI_RECOGNITION_THRESHOLD) {\n        ImageProcessor.drawOutput(nameCanvas, maxMatch.name);\n      }\n\n      this.cameraTimeout = setTimeout(draw, 100, video, context);\n    };\n    this.isActive = true;\n  }\n\n  stop() {\n    clearTimeout(this.cameraTimeout);\n    this.stream.getTracks()[0].stop();\n    this.isActive = false;\n  }\n}\n\nexport default WebCam;\n\n\n// WEBPACK FOOTER //\n// ./src/js/WebCam.js","import * as utils from \"./Utils\";\nimport ImageProcessor from \"./ImageProcessor\";\n\nclass Histogram {\n  static init(bins) {\n    let histogram = [];\n    for (let i = 0, binLength = bins.length; i < binLength; i++) {\n      histogram.push({\n        'bin': bins[i],\n        'frequency': 0,\n        'normalized': 0\n      });\n    }\n    return histogram;\n  }\n\n  static uniformBinary(imageData) {\n    let data = imageData.data;\n    let histogram = this.init(utils.UNIFORM_BINARY_PATTERN);\n    for (let i = 0, dataLength = data.length; i < dataLength; i += 4) {\n      let isNotUniform = true;\n      for (let j = 1, uniformLength = utils.UNIFORM_BINARY_PATTERN.length; j < uniformLength; j++) {\n        if (utils.UNIFORM_BINARY_PATTERN[j] === data[i]) {\n          this.incrementHistogramFrequency(histogram, j, dataLength);\n          isNotUniform = false;\n          break;\n        }\n      }\n      if (isNotUniform) {\n        this.incrementHistogramFrequency(histogram, 0, dataLength);\n      }\n    }\n    // console.log(this.isNormalized(histogram, data.length));\n\n    return histogram;\n  }\n\n  static incrementHistogramFrequency(histogram, index, dataLength) {\n    histogram[index].frequency++;\n    histogram[index].normalized = histogram[index].frequency / (dataLength / 4);\n  }\n\n  static compareHistogram(firstHistogram, secondHistogram) {\n    return this.chiSquare(firstHistogram, secondHistogram);\n  }\n\n  static chiSquare(firstHistogram, secondHistogram) {\n    let total = firstHistogram.length;\n    let sum = 0;\n    for (let i = 0; i < total; i++) {\n      sum += Math.pow((firstHistogram[i].normalized - secondHistogram[i].normalized), 2) / secondHistogram[i].normalized;\n    }\n\n    return sum;\n  }\n\n  static isNormalized(histogram, dataLength) {\n    let totalFrequencies = 0, totalNormalizedValue = 0;\n    for (let k = 0; k < histogram.length; k++) {\n      totalFrequencies += histogram[k].frequency;\n      totalNormalizedValue += histogram[k].normalized;\n    }\n    return (totalFrequencies === dataLength / 4) && Math.round(totalNormalizedValue) === 1;\n  }\n\n  static compareFeature(canvas) {\n    let observedHistogram = Histogram.uniformBinary(ImageProcessor.getImageData(canvas));\n    let maxMATCH = {\n      value: 1,\n      name: ''\n    };\n    for (let key in utils.TRAINED_DATA) {\n      if (utils.TRAINED_DATA.hasOwnProperty(key)) {\n        let difference = Histogram.compareHistogram(observedHistogram, utils.TRAINED_DATA[key]);\n        if (difference <= maxMATCH['value']) {\n          maxMATCH.name = key;\n          maxMATCH.value = difference;\n        }\n      }\n    }\n\n    return maxMATCH;\n  }\n}\n\nexport default Histogram;\n\n\n// WEBPACK FOOTER //\n// ./src/js/Histogram.js","import * as utils from \"./Utils\";\n\nclass ImageProcessor {\n  static getImageData(canvas) {\n    return canvas.getContext(\"2d\").getImageData(0, 0, canvas.width, canvas.height);\n  }\n\n  static rgb2gray(data) {\n    for (let i = 0, dataLength = data.length; i < dataLength; i += 4) {\n      data[i] = data[i + 1] = data[i + 2] = data[i] * 0.3 + data[i + 1] * 0.59 + data[i + 2] * 0.11;\n    }\n\n    return data;\n  }\n\n  static rgbCanvas2grey(canvas) {\n    let imageData = this.getImageData(canvas);\n    return this.rgb2gray(imageData.data);\n  }\n\n  static getPixelValue(context, x, y) {\n    let pixel = context.getImageData(x, y, 1, 1);\n\n    return pixel.data[0];\n  }\n\n  static extractFeature(canvas) {\n    let context = canvas.getContext('2d');\n    let imageData = ImageProcessor.getImageData(canvas);\n    let data = imageData.data;\n    let backupData = imageData.data.slice();\n\n    for (let y = 1; y < canvas.height - 1; y++) {\n      for (let x = 1, index = 0; x < canvas.width - 1; x++, index += 4) {\n        let sum = 0;\n        let neighbourValue = [];\n        let centerPosition = utils.get1DPosition(canvas.width, x, y) * utils.RGBA_SHIFT;\n        let centerValue = this.getGrayScaleValue(backupData, centerPosition);\n        neighbourValue[7] = this.getGrayScaleValue(backupData, utils.get1DPosition(canvas.width, x - 1, y - 1) * utils.RGBA_SHIFT) - centerValue;\n        neighbourValue[6] = this.getGrayScaleValue(backupData, utils.get1DPosition(canvas.width, x, y - 1) * utils.RGBA_SHIFT) - centerValue;\n        neighbourValue[5] = this.getGrayScaleValue(backupData, utils.get1DPosition(canvas.width, x + 1, y - 1) * utils.RGBA_SHIFT) - centerValue;\n        neighbourValue[4] = this.getGrayScaleValue(backupData, utils.get1DPosition(canvas.width, x + 1, y) * utils.RGBA_SHIFT) - centerValue;\n        neighbourValue[3] = this.getGrayScaleValue(backupData, utils.get1DPosition(canvas.width, x + 1, y + 1) * utils.RGBA_SHIFT) - centerValue;\n        neighbourValue[2] = this.getGrayScaleValue(backupData, utils.get1DPosition(canvas.width, x, y + 1) * utils.RGBA_SHIFT) - centerValue;\n        neighbourValue[1] = this.getGrayScaleValue(backupData, utils.get1DPosition(canvas.width, x - 1, y + 1) * utils.RGBA_SHIFT) - centerValue;\n        neighbourValue[0] = this.getGrayScaleValue(backupData, utils.get1DPosition(canvas.width, x - 1, y) * utils.RGBA_SHIFT) - centerValue;\n\n        for (let k = 0, totalNeighbour = neighbourValue.length; k < totalNeighbour; k++) {\n          sum += utils.unitStep(neighbourValue[k]) * Math.pow(2, k);\n        }\n        data[centerPosition] = data[centerPosition + 1] = data[centerPosition + 2] = sum;\n      }\n    }\n\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    context.putImageData(imageData, 0, 0);\n  }\n\n  static getGrayScaleValue(data, position) {\n    return data[position] * 0.3 + data[position + 1] * 0.59 + data[position + 2] * 0.11;\n  }\n\n  static drawOutput(canvas, name) {\n    let context = canvas.getContext(\"2d\");\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    context.font = 'bold 18pt Calibri';\n    context.textAlign = 'center';\n    context.fillText(\"You're\", canvas.width / 2, canvas.height / 2 - 20);\n    context.fillText(name, canvas.width / 2, canvas.height / 2 + 20);\n  }\n}\n\nexport default ImageProcessor;\n\n\n// WEBPACK FOOTER //\n// ./src/js/ImageProcessor.js","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main.scss\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}